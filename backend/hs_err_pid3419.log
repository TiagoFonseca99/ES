#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f8e2a964131, pid=3419, tid=5861
#
# JRE version: OpenJDK Runtime Environment (11.0.6+10) (build 11.0.6+10)
# Java VM: OpenJDK 64-Bit Server VM (11.0.6+10, mixed mode, tiered, compressed oops, g1 gc, linux-amd64)
# Problematic frame:
# C  [libjimage.so+0x4131]  ImageStrings::find(Endian*, char const*, int*, unsigned int)+0x71
#
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# If you would like to submit a bug report, please visit:
#   https://github.com/AdoptOpenJDK/openjdk-support/issues
#

---------------  S U M M A R Y ------------

Command Line: --add-opens=java.desktop/sun.awt=ALL-UNNAMED --add-opens=java.desktop/sun.swing=ALL-UNNAMED --add-opens=java.desktop/javax.swing.text.html=ALL-UNNAMED --add-opens=java.desktop/java.awt=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/sun.awt.X11=ALL-UNNAMED -XX:+HeapDumpOnOutOfMemoryError -Xms1g -Xmx1g -XX:MaxMetaspaceSize=256m -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:G1ReservePercent=20 -Djava.security.egd=file:/dev/urandom -Duser.language=en -Duser.region=EN /home/jdinis/GlobalInstall/apache-jmeter-5.2.1/bin/ApacheJMeter.jar

Host: Intel(R) Core(TM) i7-4790K CPU @ 4.00GHz, 8 cores, 3G, Ubuntu 18.04.4 LTS
Time: Sun Mar 22 11:09:29 2020 WET elapsed time: 1617 seconds (0d 0h 26m 57s)

---------------  T H R E A D  ---------------

Current thread (0x00007f8d5c005800):  JavaThread "XToolkt-Shutdown-Thread" [_thread_in_vm, id=5861, stack(0x00007f8d63bfc000,0x00007f8d63cfd000)]

Stack: [0x00007f8d63bfc000,0x00007f8d63cfd000],  sp=0x00007f8d63cf9f60,  free space=1015k
Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [libjimage.so+0x4131]  ImageStrings::find(Endian*, char const*, int*, unsigned int)+0x71
C  [libjimage.so+0x4e1a]  ImageFileReader::find_location_index(char const*, unsigned long long*) const+0x3a
C  [libjimage.so+0x531a]  JIMAGE_FindResource+0xfa
V  [libjvm.so+0x5cd70e]